#include "device_plugin_container.h"
#include "plugin_impl_base.h"
#include "device_impl.h"

${IMPL_INCLUDES_STRING}

namespace dronecore {

DevicePluginContainer::DevicePluginContainer(DeviceImpl *impl) :
${PLUGIN_CTOR_STRING}
    _plugin_impl_list()
{
${PLUGIN_LIST_APPEND_STRING}

    for (auto plugin_impl : _plugin_impl_list) {
        plugin_impl->set_parent(impl);
    }

    init_plugins();

    impl->subscribe_on_discovery(std::bind(&DevicePluginContainer::enable_plugins, this));
    impl->subscribe_on_timeout(std::bind(&DevicePluginContainer::disable_plugins, this));
}

DevicePluginContainer::~DevicePluginContainer()
{
    disable_plugins();
    deinit_plugins();

    while (!_plugin_impl_list.empty()) {
        delete _plugin_impl_list.back();
        _plugin_impl_list.pop_back();
    }
}

void DevicePluginContainer::init_plugins()
{
    for (auto plugin_impl : _plugin_impl_list) {
        plugin_impl->init();
    }
}

void DevicePluginContainer::deinit_plugins()
{
    for (auto plugin_impl : _plugin_impl_list) {
        plugin_impl->deinit();
    }
}

void DevicePluginContainer::enable_plugins()
{
    for (auto plugin_impl : _plugin_impl_list) {
        plugin_impl->enable();
    }
}

void DevicePluginContainer::disable_plugins()
{
    for (auto plugin_impl : _plugin_impl_list) {
        plugin_impl->disable();
    }
}


} // namespace dronecore
